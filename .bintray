: << USAGE
######################################################################
curl -o /tmp/bintray-functions j.mp/xxx && . /tmp/bintray-functions
######################################################################
USAGE

: ${BINTRAY_KEY:? reuired for authentication}
: ${BINTRAY_USER:? username is required}
: ${DEBUG:=1}

debug() {
  [ $DEBUG -gt 0 ] && echo [DEBUG] "$@" 1>&2
}

_replace_key() {
  sed s/$BINTRAY_KEY/\$BINTRAY_KEY/ <<< "$@"
}

run-debug() {
  safeMsg=$(_replace_key "$@")
  debug "$safeMsg"

  bt_resp=$("$@" 2>/dev/null)
  echo $bt_resp
}

bint-curl() {
  path=$1
  # prefix with '/' if missing
  [ ${path:0:1} == "/" ] || path="/$path"
  shift
  run-debug curl "$@" -q -u $BINTRAY_USER:$BINTRAY_KEY https://api.bintray.com$path
}

bint-browse() {
  PS3="Your choice: "


  repos=$(bint-curl /repos/$BINTRAY_SUBJECT |jq .[].name -r)
  echo select a REPO
  select repo in $repos; do
    break
  done

  pacakages=$(bint-packages $BINTRAY_SUBJECT $repo)
  echo select a PACKAGE
  select package in $pacakages; do
    break
  done

}

bint-last-response() {
  echo $bt_resp
}

bint-repos() {
  [ $# -gt 0 ] && BINTRAY_SUBJECT=$1
  : ${BINTRAY_SUBJECT:? bintray subject is required}
  bint-curl /repos/$BINTRAY_SUBJECT |jq .[].name -r
}

bint-packages() {
  BINTRAY_SUBJECT=$1
  BINTRAY_REPO=$2

  : ${BINTRAY_SUBJECT:? subject is required}
  : ${BINTRAY_REPO:? repo is required}

  bint-curl /repos/$BINTRAY_SUBJECT/$BINTRAY_REPO/packages |jq .[].name -r
}

bint-package() {
  BINTRAY_SUBJECT=$1
  BINTRAY_REPO=$2
  BINTRAY_PACKAGE=$3

  : ${BINTRAY_SUBJECT:? subject is required}
  : ${BINTRAY_REPO:? repo is required}
  : ${BINTRAY_PACKAGE:? package is required}

  bint-curl /packages/$BINTRAY_SUBJECT/$BINTRAY_REPO/$BINTRAY_PACKAGE |jq .[].name -r
}

bint-versions() {
  BINTRAY_SUBJECT=$1
  BINTRAY_REPO=$2
  BINTRAY_PACKAGE=$3

  : ${BINTRAY_SUBJECT:? subject is required}
  : ${BINTRAY_REPO:? repo is required}
  : ${BINTRAY_PACKAGE:? package is required}

  bint-curl /repos/$BINTRAY_SUBJECT/$BINTRAY_REPO/packages |jq .[].name -r
}
